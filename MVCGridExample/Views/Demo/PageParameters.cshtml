@{
    ViewBag.Title = "Page Parameters";
}

<h2>Page Parameters</h2>

<p>If you need to pass some data from your view to your grid, you can use page parameters. Here's how:</p>

<div class="well"><strong>NOTE:</strong> Page parameters are for static data that will be loaded only once. If you need to pass additional query parameters that could change on the client side, use @Html.ActionLink("Additional Query Options", "AdditionalQueryOptions")</div>

<ol>
    <li>
        Add one or more names of the page parameters to your grid config: (The names can be anything you want)
        <br/>
        <pre class="brush: csharp">
    .WithPageParameterNames("Active")
</pre>
    </li>
    <li>
        Populate the parameter from your view
        <br/>
        <pre>
    @@Html.MVCGrid("PPGrid", new { active = "true" })
</pre>
    </li>
    <li>
        Use the value in your function:
        <br/>
        <pre class="brush: csharp">
    string ppactive = options.GetPageParameterString("active");
</pre>
    </li>
</ol>

<button class="btn btn-default"
        data-mvcgrid-name="PPGrid"
        data-mvcgrid-type="export">
    <span aria-hidden="true"
          class="glyphicon glyphicon-download-alt">
    </span> Export
</button>

@Html.MVCGrid("PPGrid", new
{
    active = "true"
})

<div class="panel panel-default">
    <div class="panel-heading">View</div>
    <div class="panel-body">
        <pre>@@Html.MVCGrid("PPGrid", new { active = "true" })</pre>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        Inside <strong>MVCGridConfig.cs</strong>
    </div>
    <div class="panel-body">
        <pre class="brush: csharp">@CodeSnippetHelper.GetCodeSnippet("PPGrid")</pre>
    </div>
</div>